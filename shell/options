#!/bin/sh
# POSIX

PROG_NAME="$(basename "${0}")"
SUCCESS=0
WRONG_USAGE=2
INTERRUPTION=3

trap 'exit "${INTERRUPTION}"' HUP INT QUIT TERM

# default values
max=0

_usage()
{
    cat <<-EOF

	${PROG_NAME} [OPTION]... <keyword>
	A script.

	<keyword>
	    A keyword.
	-m <max> (default: ${max})
	    Maximal amount.
	-h, --help
	    Display this help and exit.

	Exit status:
	    ${SUCCESS}    success
	    ${WRONG_USAGE}    wrong usage
	    ${INTERRUPTION}    external interruption

	EOF
}

_processParameters()
{
    local arg new_arg option
    # process options
    while [ "${#}" -gt 0 ]
    do
        arg="${1}"
        shift
        case "${arg}" in
            (--file)
                case "${1}" in
                    (''|-*)
                        echo "Bad usage: option --file necessitates an argument." >&2
                        ;;
                    (*)
                        echo "File: “ ${1} ”."
                        shift
                        ;;
                esac
                ;;
           (--file=*)
                file="${arg#*=}"
                echo "File: “ ${file} ”."
                ;;
            (-h|--help)
                _usage
                exit "${SUCCESS}"
                ;;
            (-a)
                echo '-a is set!'
                ;;
            (--)    # end of options
                break
                ;;
            (-?|--*)    # unknown option
                echo "Invalid option: “${arg}”." >&2
                _usage
                exit "${WRONG_USAGE}"
                ;;
            (-??*)  # several short options
                while [ "${arg}" != '-' ]   # parse
                do
                    new_arg="${arg%?}"  # remove last option
                    option="${arg##${new_arg}}" # read it
                    # forget dashes and add option to the list of single options to process
                    [ "${option}" = '-' ] || set -- "-${option}" "${@}"
                    arg="${new_arg}"
                done
                ;;
            ('') ;; # null parameter
            (*) # not an option
                echo "Solitary argument: “${arg}”."
                ;;
        esac
    done
    # process any remaining arguments
    while [ "${#}" -gt 0 ]
    do
        shift
        # may have to repeat here the code from case (*) of previous loop
        echo "Solitary argument:  ${arg}."
    done
}
