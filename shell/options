#!/bin/bash
# POSIX

_usage()
{
#	printf '%s\t%s\n' 'usage:' 'options [args]'
	true
}

_processParameters()
{
    local arg new_arg option
    # process options
    while [ "${#}" -gt 0 ]
    do
        arg="${1}"
        shift
        case "${arg}" in
            --file)
                if case "${1}" in ''|-*) false ;; 
                                      *) true ;;
                   esac
                then
                    echo "file: ${1}"
                    shift
                else
                    echo "bad usage: option --file necessitates an argument" >&2
                fi
                ;;
            --file=*)
                file="${arg#*=}"
                echo "file: ${file}"
                ;;
            -h|--help)
                _usage
                exit 0
                ;;
            -a)
                echo '-a is set!'
                ;;
            --)     # end of options
                break
                ;;
            -?|--*) # unknown option
                echo "invalid option: ${arg}" >&2
                _usage
                exit 1
                ;;
            -??*)   # several short options
                while [ "${arg}" != '-' ]   # parse
                do
                    new_arg="${arg%?}"  # remove last option
                    option="${arg##${new_arg}}" # read it
                    # forget dashes and add option to the list of single options to process
                    [ "${option}" = '-' ] || set -- "-${option}" "${@}"
                    arg="${new_arg}"
                done
                ;;
            '') ;;  # null parameter
            *)      # not an option
                echo "solitary argument:  ${arg}"
                ;;
        esac
    done
    # process any remaining arguments
    while [ "${#}" -gt 0 ]
    do
        shift
        # may have to repeat here the code from case *) of previous loop
        echo "solitary argument:  ${arg}"
    done
}
