#!/usr/bin/env sh

# download_ep [episode_number]
# A wrapper for ~/bin/download.

# This wrapper is meant to be copied in a series folder.
# Then, edit the parameters as you see fit.

printf '%s\n' 'bad usage: please adapt this script to the local context.' >&2
exit 2

season=7
folder="/home/val/Downloads/Transmission/Series/animation/Archer/season ${season}"

# File to store episode number. The data file gets overwritten by the script.
data_file='../next_episode'
# If you want to force an episode number, you can pass it as first argument.

# Name of the series. Used in filenames of episodes and subtitles.
series="$(basename "$(dirname "${folder}")")"

mkdir -p "${folder}"
if ! cd "${folder}"
then
    printf '%s\n' 'error: cd returned an error.' >&2
    exit 2
fi

if [ -n "${1}" ]
then
    episode="${1}"
    echo "${episode}" > "${data_file}"
else
    [ -f "${data_file}" ] && episode="$(cat "${data_file}")"
    [ -n "${episode}" ] || episode=1
fi

[ "${season}" -lt 10 ] && s_prefix='0' || s_prefix=''
[ "${episode}" -lt 10 ] && e_prefix='0' || e_prefix=''

title="${series} S${s_prefix}${season}E${e_prefix}${episode}"
printf '%s\n' "${title}"

printf '# %s:\n' "subtitles"
if ~/bin/download "${title}"
then
    printf '# %s:\n' "video"
    if ~/bin/download "${title}"
    then
        echo "$((episode + 1))" > "${data_file}"
    else
        printf '%s\n' "error: bin/download returned error code ‘$?’" >&2
        exit 2
    fi
else
    printf '%s\n' "error: bin/download returned error code ‘$?’" >&2
    exit 2
fi
