#!/bin/sh

# sudo ./luminosity [n]
# show or change the screen’s brightness

# with no arguments: interactive mode
# with an argument:
#   if the argument is a positive integer,
#   the script attempts to use the argument to set the screen’s brightness


folder="/sys/class/backlight/intel_backlight"
file_brightness="${folder}/brightness"
file_max="${folder}/max_brightness"

_setBrightness()
{
    echo "${1}" > "${file_brightness}"
}

_actualizeBrightness()
{
    brightness="$(cat "${file_brightness}")"
    echo "current brightness: ${brightness}"
}

if [ "${#}" -ge 1 ]; then
    case "${1}" in
        ''|*[!0-9]*) ;;
        *)
            _setBrightness "${1}"
            _actualizeBrightness
            exit
            ;;
    esac
fi

echo
printf '%7s+[enter]: %s\n'                  \
        'x'         'quit'                  \
        'number'    'new slowness'          \
        '[+]'       'go upwards'            \
        '[-]'       'go downwards'          \
        'nothing'   'change luminosity'
echo

_switchSign()
{
    case "${op}" in
        '-') op='+';;
         * ) op='-';;
    esac
    _printDirection
}

_printDirection()
{
    case "${op}" in
        '-') echo '(descending)' ;;
        '+') echo '(ascending)' ;;
    esac
}

slowness=3
op='-'

max="$(cat "${file_max}")"
echo "max brightness: ${max}"

while true
do
    _actualizeBrightness
    let "modifier = ${brightness} / ${slowness}"
    [ "${modifier}" -ge 1 ] || modifier=1
    printf  'current slowness: %s ' "${slowness}"
        _printDirection
        read ans
        case "${ans}" in
            '') ;;
           x|X|q|Q) break ;;
            +*) op='+' ; _printDirection ; continue ;;
            -*) op='-' ; _printDirection ; continue ;;
      *[!0-9]*) echo 'invalid input, try again' >&2 ; continue ;;
             *)
                [ "${ans}" -ge 1 ] && let "slowness=${ans}"
                printf 'slowness: %s ' "${slowness}"
                _printDirection
                continue
                ;;
        esac
    let "new=brightness ${op} ${modifier}"
    if [ "${new}" -lt 1 ]; then
        echo "error: brightness (${new}) must be positive." >&2
        new=1
    elif [ "${new}" -gt "${max}" ]; then
        echo "error: brightness (${new}) must be inferior to ${max}" >&2
        new="${max}"
    fi
    _setBrightness "${new}"
done
