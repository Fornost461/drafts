#!/bin/bash

# watcher - launch files with VLC

## parameters

#~ source_dir='/home/val/mnt/Data/Downloads/v/unwatched'
source_dir='/home/val/mnt/Data/Downloads/v/'
move_to_target_dir=false
#~ move_to_target_dir=true
target_dir="../$(date -I)"
print_help_at_launch=true

file_viewer='spacefm'

## code

PROGNAME="watcher"
PROGDIR="$(cd "$(dirname "${0}")" && pwd -P)"

# load libraries
. "${PROGDIR}/_utils/load" || { echo "${PROGNAME}: line ${LINENO}: error code ${?} while sourcing “ ${PROGDIR}/_utils/load ”" >&2 ; exit 1; }

cd "${source_dir}" || { _error "${PROGNAME}: line ${LINENO}: error code ${?} while changing directory"; exit 1; }

# debug mode
no_video=false
[ "${#}" -gt 0 ] && no_video=true

"${print_help_at_launch}" && _usage

_question()
{
    printf '“ %s ”. Action ? ' "${file}"
    if "${move_to_target_dir}"; then
        if "${moved}"; then
            printf '[n]/y/'
        else
            printf '[y]/n/'
        fi
    else
        printf '[n]/'
    fi
    printf '%s\n' 'q/r/d/p/h'
}

_play_vid()
{
    if ! "${no_video}"; then
        vlc "${file}" 1>/dev/null 2>&1 & disown
    fi
}

_move_to_target_dir()
{
    if mkdir -vp "${target_dir}"; then
        mv -vi "${file}" "${target_dir}" && moved=true
    else
        echo "${PROGNAME}: an error occurred when attempting to create directory ${target_dir}" >&2
    fi
}

#~ while true
#~ do
# launch up to 20 files
"${PROGDIR}/pick_file" 20 . | while read file
do
    [ -e "${file}" ] || break   # check if user removed file
    dir="$(dirname "${file}")"
    moved=false
    _play_vid
    reask=true
    while "${reask}"
    do
        _question
        read ans < /dev/tty
        case "${ans}" in
            p|P)    # file viewer
                [ -d "${dir}" ] && "${file_viewer}" "${dir}" >/dev/null 2>&1 &
                ;;
            r|R)    # replay
                _play_vid
                ;;
            d|D)    # delete file
                rm -v "${file}" && moved=true
                ;;
            n|N)    # skip next actions
                reask=false
                ;;
            q|Q)    # exit
                echo 'Quitting.'
                exit 0
                ;;
            y|Y)   # move file
                
                "${move_to_target_dir}" && _move_to_target_dir
                ;;
            '')
                if "${move_to_target_dir}" && ! "${moved}"; then
                    _move_to_target_dir
                else
                    reask=false
                fi
                ;;
            *)    # print help
                printf '%s\n' 'Invalid command.'
                _usage
                ;;
        esac
    done
done
